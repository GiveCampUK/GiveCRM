@model GiveCRM.Web.Models.Members.MemberEditViewModel 

<h2>@ViewBag.Title</h2>

@Html.ValidationSummary("", new {@class="alert-message warning"})

<div>
@{Html.BeginForm("Save", "Member", FormMethod.Post, new {id="addMember"});}

@Html.HiddenFor(m => m.Id)

@Html.LabelFor(m=>m.Reference) @Html.TextBoxFor(m => m.Reference) @Html.ValidationMessageFor(m => m.Reference)<br />

@Html.LabelFor(m => m.Title) @Html.TextBoxFor(m=> m.Title) @Html.ValidationMessageFor(m => m.Title) <br />

@Html.LabelFor(m => m.Salutation) @Html.TextBoxFor(m=> m.Salutation) @Html.ValidationMessageFor(m => m.Salutation) <br />

@Html.LabelFor(m => m.FirstName) @Html.TextBoxFor(m => m.FirstName) @Html.ValidationMessageFor(m => m.FirstName) <br />

@Html.LabelFor(m => m.LastName) @Html.TextBoxFor(m => m.LastName) @Html.ValidationMessageFor(m => m.LastName)<br />

@Html.LabelFor(m => m.AddressLine1) @Html.TextBoxFor(m => m.AddressLine1) @Html.ValidationMessageFor(m => m.AddressLine1)<br />

@Html.LabelFor(m => m.AddressLine2) @Html.TextBoxFor(m => m.AddressLine2) @Html.ValidationMessageFor(m => m.AddressLine2)<br />

@Html.LabelFor(m => m.City) @Html.TextBoxFor(m => m.City) @Html.ValidationMessageFor(m => m.City) <br />

@Html.LabelFor(m => m.PostalCode) @Html.TextBoxFor(m => m.PostalCode) @Html.ValidationMessageFor(m => m.PostalCode) <br />

@Html.LabelFor(m => m.Region) @Html.TextBoxFor(m=> m.Region) @Html.ValidationMessageFor(m => m.Region)<br />

@Html.LabelFor(m => m.Country) @Html.TextBoxFor(m => m.Country) @Html.ValidationMessageFor(m => m.Country) <br />

@Html.LabelFor(m => m.EmailAddress) @Html.TextBoxFor(m => m.EmailAddress) @Html.ValidationMessageFor(m => m.EmailAddress) <br />


<div id="PhoneNumbers">
@{
    int i = 0; 
    foreach(var phone in Model.PhoneNumbers)
    {
        <label for="PhoneNumbers[@i].Number">@phone.PhoneNumberType</label><input id="PhoneNumbers[@i].Number" name="PhoneNumbers[@i].Number" type="text" value="@phone.Number" /><br />
        <input type="hidden" name="PhoneNumbers[@i].MemberId" value="@phone.MemberId" />
        <input type="hidden" name="PhoneNumbers[@i].Id" value="@phone.Id" />
        <input type="hidden" class="numbertype" name="PhoneNumbers[@i].PhoneNumberType" value="@phone.PhoneNumberType" />
        i += 1; 
    }
}
</div>

<div id="AddNumber">
    <label for="AddNumber_Type">Number Type</label>
    <select id="AddNumber_Type" name="AddNumber_Type">
    @foreach(int phoneType in Enum.GetValues(typeof(GiveCRM.Models.PhoneNumberType))) 
    {
       <option value="@phoneType">@Enum.GetName(typeof(GiveCRM.Models.PhoneNumberType), @phoneType)</option>
    }
    </select><br />
    <label for="AddNumber_Number">Number</label><input id="AddNumber_Number" name="number" type="text" />
    <input id="AddNumber_Button" type="button" value="Add Number"  /><br />
</div>

<input type="submit" value="Save" />
@{Html.EndForm();}

<div>

<script type="text/javascript">

    $(function () {
        $('#AddNumber_Button').click(function () {
            var index = $('.numbertype').length;
            var type = HtmlEncode($('#AddNumber_Type option:selected').text());
            var number = HtmlEncode($('#AddNumber_Number').val());
            $('#AddNumber_Number').val('');
            if (number.trim() === '')
                return;
            $('#PhoneNumbers').append('<label for="PhoneNumbers[' + index + '].Number">' + type +
                                      '</label><input name="PhoneNumbers[' + index + '].Number" type="text" value="' + number + '" /><br />' +
                                      '<input type="hidden" name="PhoneNumbers[' + index + '].Id" value="0" />' +
                                      '<input type="hidden" class="numbertype" name="PhoneNumbers[' + index + '].PhoneNumberType" value="' + type + '" />');

        });

        var HtmlEncode = function (val) {
            return $('<div/>').text(val).html();
        };
    }); 
</script>


</div>
</div>